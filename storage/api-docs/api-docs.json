{
    "openapi": "3.0.0",
    "info": {
        "title": "Laravel Template API",
        "description": "Laravel Template API documentation",
        "contact": {
            "email": "narushevich.maksim@gmail.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8005/api/v1",
            "description": "API documentation"
        }
    ],
    "paths": {
        "/posts": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get all posts",
                "description": "Returns all posts details",
                "operationId": "getPosts",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "user"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available posts",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Post"
                ],
                "summary": "Create a new post",
                "description": "Create a new post.",
                "operationId": "createPost",
                "requestBody": {
                    "description": "Create post",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreatePost"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Post created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/posts/{id}": {
            "get": {
                "tags": [
                    "Post"
                ],
                "summary": "Get a specific post",
                "description": "Returns post details",
                "operationId": "getPostById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post's ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific post",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Post"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Post Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Post"
                ],
                "summary": "Delete post",
                "description": "This can only be done by the logged in user.",
                "operationId": "deletePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of post to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Post deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "Post not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "Post"
                ],
                "summary": "Update a specific post",
                "description": "Update post.",
                "operationId": "updatePost",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Post id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update post",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/Post"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Post updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get all users",
                "description": "Returns all users details",
                "operationId": "getUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Current page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 1
                    },
                    {
                        "name": "perPage",
                        "in": "query",
                        "description": "Number of items to be retrieved per page",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 10
                    },
                    {
                        "name": "relationships",
                        "in": "query",
                        "description": "Relationships that should be inclused in response",
                        "required": false,
                        "schema": {
                            "type": "string"
                        },
                        "example": "posts"
                    },
                    {
                        "name": "relationPerPage",
                        "in": "query",
                        "description": "Number of relationships to be retrieved in response structure",
                        "required": false,
                        "schema": {
                            "type": "integer"
                        },
                        "example": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received available users",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "description": "Create a new user.",
                "operationId": "createUser",
                "requestBody": {
                    "description": "Create user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/CreateUser"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User created"
                    },
                    "400": {
                        "description": "Request validation error"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/users/{id}": {
            "get": {
                "tags": [
                    "User"
                ],
                "summary": "Get a specific user",
                "description": "Returns user details",
                "operationId": "getUserById",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User's ID",
                        "required": true,
                        "schema": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully received specific user",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/User"
                                }
                            }
                        }
                    },
                    "400": {
                        "description": "Bad request"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "User Not Found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "User"
                ],
                "summary": "Delete user",
                "description": "This can only be done by the logged in user.",
                "operationId": "deleteUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "ID of user to be deleted",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User deleted"
                    },
                    "400": {
                        "description": "Invalid ID supplied"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "404": {
                        "description": "User not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "patch": {
                "tags": [
                    "User"
                ],
                "summary": "Update a specific user",
                "description": "Update user.",
                "operationId": "updateUser",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "User id",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "description": "Update user",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/User"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User updated"
                    },
                    "401": {
                        "description": "Authorization token must be provided"
                    },
                    "400": {
                        "description": "Request validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Post": {
                "properties": {
                    "title": {
                        "type": "string"
                    },
                    "description": {
                        "type": "string"
                    },
                    "slug": {
                        "type": "string"
                    },
                    "user_id": {
                        "type": "integer"
                    }
                },
                "type": "object"
            },
            "CreatePost": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/Post"
                    },
                    {
                        "required": [
                            "title",
                            "user_id",
                            "slug"
                        ]
                    }
                ]
            },
            "User": {
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "CreateUser": {
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/User"
                    },
                    {
                        "required": [
                            "name",
                            "email",
                            "password"
                        ]
                    }
                ]
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "description": "Oauth2 security",
                "name": "oauth2",
                "in": "header",
                "flows": {
                    "clientCredentials": {
                        "tokenUrl": "oauth/token",
                        "scopes": {}
                    }
                },
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        []
    ]
}